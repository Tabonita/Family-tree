import datetime
class Person():
    def __init__(self,name,surname,birthday,gender,role,generation):
        self.name=name
        self.surname=surname
        self.birthday=birthday
        self.death=0
        self.gender=gender
        self.role=role
        self.children=[]
        self.spouse=0
        self.parents=[]
        self.sibling=[]
        self.generation=generation
    def __str__(self):
        return self.name+' '+ self.surname #print
    def name_and_surname(self):
        print(self.name+' '+self.surname) 
    def show_children(self):
        for i in self.children:
            print(i.name+' is '+self.name+"'s "+i.role+' and was born on '+str (i.birthday))
    def who_is_the_oldest_child(self): #находит у человека самого старшего ребенка
        for i in range(len(self.children)-1):
            if (datetime.date.today()-self.children[i].birthday) > (datetime.date.today()-self.children[i+1].birthday):
                self.children[i],self.children[i+1]=self.children[i+1],self.children[i]
        print(str(self.children[-1])+' and is the oldest child')

    def print_sibling(self):
        for i in self.sibling:
            print(i)
    def print_info(self):
        print (f'{self.name} {self.surname} is born on {str(self.birthday)} , gender {self.gender}, role in this Family tree: {self.role}.') 
        print('CHILDREN')
        print_list(self.children)
        print(f'SPOUSE {str(self.spouse)}')
        print('PARENTS')
        print_list(self.parents)
        print('SIBLINGS')
        print_list(self.sibling)
        
        
def marriage(spouse1,spouse2):
    spouse1.spouse=spouse2
    spouse2.spouse=spouse1

def children(spouse1,spouse2):
    spouse2.children=spouse1.children

def parents(mylist,child):
    for i in mylist:
        if child in i.children and len(child.parents)<=2:
            #print(i)
            child.parents.append(i)
    return child.parents
            
def print_list(mylist):
    for i in mylist:
        print(i)

def find_sibling(person1,person2):
    a=0
    for i in person1.parents:
        for j in person2.parents:
            if i==j:
                a+=1
    if a>0:
        person1.sibling.append(person2)
        person2.sibling.append(person1)
    print(f'{person1} is a sibling of {person2}')
    
def print_couples(mylist):
    spouse_list=[]
    
    for k in mylist:
        if k!=0 and k.spouse!=0 and k.gender=='f':
            spouse_list.append(k.spouse)
            spouse_list.append(k)
    mylist=spouse_list
    return mylist

def print_family(mylist):
    i=0
    new_family_list=print_couples(mylist)
    for i in range(len(new_family_list)):
        if i%2==0 or i==0 :
            print(f'\tit is a family of {new_family_list[i]} and {new_family_list[i+1]}')
        if len(new_family_list[i].children)!=0 and (i%2==0 or i==0) :
            print('their children ')
            print_list(new_family_list[i].children)
        elif i%2==0 or i==0:
            print('they dont have children YET')
        if len(new_family_list[i].parents)>1:
            print(f'parents of {new_family_list[i].name} {new_family_list[i].surname}')
            print_list(new_family_list[i].parents)
    
mother=Person('Lidia' ,'Tumasian',datetime.date(1936,3,13),'f','mother',0)
father=Person('Levon','Tumasian',datetime.date(1916,10,25),'m','father',0)
daughter_1=Person('Astkhik','Datsun',datetime.date(1957,11,2),'f','daughter',1)
daughter_2=Person('Tatiana','Tumasian',datetime.date(1959,6,12),'f','daughter',1)
mother1=Person('Aleksandra','Metasova',datetime.date(1935,8,9),'f','mother',0)
father1=Person('Fyodor','Metasov',datetime.date(1927,5,8),'m','father',0)
son_1=Person('Evgenii','Metasov',datetime.date(1959,7,18),'m','son',1)
son_2=Person('Vladimir','Metasov',datetime.date(1961,6,9),'m','son',1)
grchild_1=Person('Aleksandra','Metasova',datetime.date(1984,3,9),'f','granddaughter',2)
grchild_2=Person('Tatiana','Smoliar',datetime.date(1990,12,3),'f','granddaughter',2)
grchild_3=Person('Ivan','Metasov',datetime.date(1993,11,28),'m','grandson',2)
spouse_1=Person('Sergei','Datsun',datetime.date(1956,11,12),'m','son',1)
grchild_4=Person('Nikolay','Datsun',datetime.date(1985,9,27),'m','grandson',2)
grchild_5=Person('Levon','Datsun',datetime.date(1988,1,23),'m','grandson',2)
grspouse_1=Person('Aleksandr','Shmakov',datetime.date(1982,12,20),'m','grandson',2)
grspouse_2=Person('Mark','Smoliar',datetime.date(1990,2,7),'m','grandson',2)
grspouse_4=Person('Anna','Datsun',datetime.date(1985,1,3),'f','granddaughter',2)
grspouse_5=Person('Ekaterina','Datsun',datetime.date(1990,4,22),'f','granddaughter',2)
grgrchild_1=Person('Elena','Shmakova',datetime.date(2011,3,15),'f','grandgranddaughter',3)
grgrchild_2=Person('Nika','Datsun',datetime.date(2011,7,11),'f','grandgranddaughter',3)
grgrchild_3=Person('Sergei','Shmakov',datetime.date(2017,2,20),'m','grandgrandson',3)
grgrchild_4=Person('Yulia','Datsun',datetime.date(2019,5,7),'f','grandgranddaughter',3)

family_list=[grchild_4,grchild_5,spouse_1,grspouse_1,grspouse_2,grspouse_4,grspouse_5,grgrchild_1,grgrchild_2,mother,father,father1,son_1,son_2,daughter_1,mother1,daughter_2,grchild_1,grchild_2,grchild_3,grgrchild_3,grgrchild_4]

marriage(mother,father)
marriage(mother1,father1)
marriage(daughter_1,spouse_1)
marriage(daughter_2,son_1)   
marriage(grchild_1,grspouse_1) 
marriage(grchild_2,grspouse_2) 
marriage(grchild_4,grspouse_4) 
marriage(grchild_5,grspouse_5)  

mother.children=[daughter_1,daughter_2]
children(mother,father)
mother1.children=[son_1,son_2]
children(mother1,father1)
daughter_1.children=[grchild_4,grchild_5]
children(daughter_1,spouse_1)
daughter_2.children=[grchild_1,grchild_2,grchild_3]
children(daughter_2,son_1)
grchild_1.children=[grgrchild_1,grgrchild_3]
children(grchild_1,grspouse_1)
grchild_4.children=[grgrchild_2]
children(grchild_4,grspouse_4)
grchild_5.children=[grgrchild_4]
children(grchild_5,grspouse_5)

parents(family_list,son_1)
parents(family_list,son_2)
parents(family_list,daughter_1)
parents(family_list,daughter_2)
parents(family_list,grgrchild_4)
parents(family_list,grgrchild_3)
parents(family_list,grgrchild_2)
parents(family_list,grgrchild_1)
parents(family_list,grchild_1)
parents(family_list,grchild_2)
parents(family_list,grchild_3)
parents(family_list,grchild_4)
parents(family_list,grchild_5)

find_sibling(grchild_1,grchild_3)
find_sibling(grchild_1,grchild_2)
find_sibling(grchild_2,grchild_3)
find_sibling(grchild_4,grchild_5)
find_sibling(grgrchild_1,grgrchild_3)
find_sibling(son_1,son_2)
find_sibling(daughter_1, daughter_2)

#создает списки по поколениям
family_list_0=[]
family_list_1=[]
family_list_2=[]
family_list_3=[]
for i in family_list:
    if i.generation==0:
        family_list_0.append(i)
    elif i.generation==1:
        family_list_1.append(i)
    elif i.generation==2:
        family_list_2.append(i)
    elif i.generation==3:
        family_list_3.append(i)
    else:
        print('I can not add it')

new_family_list = list(family_list) 
print_list(new_family_list)

